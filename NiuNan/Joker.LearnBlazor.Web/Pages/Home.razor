@page "/"

@inject IProduct _product
@inject IMessageService _message

@using Joker.LearnBlazor.Web.Models
@using Joker.LearnBlazor.Web.Repository


<Layout>
    <Header Class="header">
        <div class="JokerLogo">
            Joker商品库
        </div>
        <Menu Theme="MenuTheme.Dark" Mode="MenuMode.Horizontal" DefaultSelectedKeys=@(new []{"2"})>
            <MenuItem Key="1" @onclick="open">新增商品</MenuItem>
        </Menu>
    </Header>
    <Layout>
        <Sider Width="200" Class="site-layout-background">
            <Tree DefaultExpandAll="true" DataSource="calist" TitleExpression="x=>x.DataItem.CategoryName" ChildrenExpression="x=>x.DataItem.Items" 
              KeyExpression="x=>x.DataItem.CategoryId.ToString()" 
              TItem="Category">                
            </Tree>
        </Sider>
        <Layout Style=" padding: 0 24px 24px;">
            <GridRow>
                <GridCol Span="16">
                    <Breadcrumb Style="margin: 16px 0;">
                        <BreadcrumbItem>电子产品</BreadcrumbItem>
                        <BreadcrumbItem>手机</BreadcrumbItem>
                    </Breadcrumb>
                </GridCol>
                <GridCol Span="8">
                    <Search @bind-Value="@searchKey" OnSearch="SearchPro" Placeholder="请输入要查询的商品名称关键字" WrapperStyle="margin-top:10px;" AllowClear />
                </GridCol>
            </GridRow>
            

           

            <Content Class="site-layout-background" Style=" padding: 24px; margin: 0; min-height: 280px;">
                <AntList Grid="grid" DataSource="@Data">
                    <Card Bordered="false" Title="@(context.ProductName)">
                        <Extra>                            
                            <Button @onclick="()=>HandleEdit(context.ProductId)" Size="small" Type="@ButtonType.Primary" Icon="@IconType.Outline.Edit">编辑</Button>

                            <Popconfirm Title="是否确认删除" Placement="@Placement.Right" OnConfirm="()=>DeletePro(context.ProductId)">
                                <Button Danger Size="small" Type="@ButtonType.Primary" Icon="@IconType.Outline.Delete">删除</Button>
                             </Popconfirm>
                        </Extra>
                        <Body>
                            <Image Width="400px" Src="@("/images/"+context.ThumbnailImage)" />
                        </Body>
                    </Card>

                </AntList>
            </Content>
        </Layout>
    </Layout>
</Layout>

<Drawer Closable="true" Width="400" @bind-Visible="visible" Placement="right" Title='@btnText' OnClose="_=>close()">
    <Form Model="@model" OnFinish="HandleSubmit">
        <FormItem Label="商品名称">
            <Input @bind-Value="@context.ProductName" />
        </FormItem>
        <FormItem Label="商品图片">
            <Input @bind-Value="@context.ThumbnailImage" />
        </FormItem>

        <Button Type="@ButtonType.Primary" HtmlType="submit">@btnText</Button>
        </Form>
    </Drawer>

    @code {

    #region 变量

    //商品分类
    private List<Category> calist;

    private string btnText = "新增";

    // 新增编辑所需要的模型
    private Product model = new Product();

    // 用于抽屉的显示隐藏
    bool visible = false;


    #endregion

    private ListGridType grid = new()
        {
            Gutter = 16,
            Xs = 4,
            Sm = 4,
            Md = 4,
            Lg = 4,
            Xl = 4,
            Xxl = 4,
        };

    public List<Product> Data = new List<Product>();
    // 页面记载
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Data = _product.GetList();
        calist = new List<Category>()
        {
            new Category(){ CategoryId=1,CategoryName="电子产品",ParentId=0,Items=new List<Category>()
            {
                new Category(){CategoryId=11,CategoryName="手机",ParentId=1},
                new Category(){CategoryId=12,CategoryName="电脑",ParentId=1},
                new Category(){CategoryId=13,CategoryName="平板",ParentId=1},
            } },
             new Category(){ CategoryId=2,CategoryName="生活用品",ParentId=0,Items=new List<Category>()
            {
                new Category(){CategoryId=21,CategoryName="牙签",ParentId=2},
                new Category(){CategoryId=22,CategoryName="抽纸",ParentId=2},               
            } },
        };
    }

    #region 商品查询

    private string searchKey = string.Empty;

    private void SearchPro()
    {
        Data = _product.GetList(searchKey);    
    }

    #endregion

    #region 商品增 删 改

    // 打开抽屉
    void open()
    {
        this.visible = true;
    }
    // 关闭抽屉
    void close()
    {
        this.visible = false;
    }

    /// <summary>
    /// 新增编辑功能
    /// </summary>
    private void HandleSubmit()
    {
        Console.WriteLine("提交了,名称是:" + model.ProductName);
        string res = "";
        if (model.ProductId != 0)
        {
            // 编辑
            _product.Update(model);
            res = "编辑成功!!!";
        }
        else
        {
            // 新增
            model.ProductId = new Random().Next(5, 10000);
            _product.Add(model);
            res = "新增成功!!!";            
        }
        // 清空文本框
        model = new Product();
        _message.Info(res);
        this.close();
    }

    /// <summary>
    /// 编辑按钮
    /// </summary>
    /// <param name="id"></param>
    private void HandleEdit(int id)
    {
        model = _product.GetModel(id);
        btnText = "编辑";
        this.open();
    }

    /// <summary>
    /// 删除商品
    /// </summary>
    /// <param name="id"></param>
    private void DeletePro(int id)
    {
        _product.Delete(id);
    }

    #endregion
}

<style>
    #components-layout-demo-top-side-2 .logo {
        width: 120px;
        height: 31px;
        background: rgba(255, 255, 255, 0.2);
        margin: 16px 28px 16px 0;
        float: left;
    }

    .site-layout-background {
        background: #fff;
    }

    .JokerLogo {
        color: white;
        font-size: 22px;
        width: 200px;
        float: left;
        font-weight: bold;
    }

    .ant-btn .anticon{
        margin-top:-4px;
        vertical-align:middle;
    }

</style>

