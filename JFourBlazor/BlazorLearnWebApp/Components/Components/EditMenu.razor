@using BlazorLearnWebApp.Entity
@using System.Diagnostics.CodeAnalysis

@RoleEntity.RoleName
<TreeView TItem="MenuEntity" Items="Items" ShowCheckbox="true" AutoCheckChildren="true" AutoCheckParent="true" ShowIcon="true">

</TreeView>

@code {
    private List<TreeViewItem<MenuEntity>> Items { get; set; } = new List<TreeViewItem<MenuEntity>>();

    [Parameter]
    public int RoleId { get; set; }

    [NotNull]
    private RoleEntity? RoleEntity{ get; set; }

    protected override async Task OnInitializedAsync()
    {
        RoleEntity = await RoleEntity.Where(x => x.Id == RoleId).IncludeMany(x => x.Menus).FirstAsync();

        await base.OnInitializedAsync();
        await RefreshItems();
    }


    private async Task RefreshItems()
    {
        Items.Clear();
        var menus = await MenuEntity.Select.ToListAsync();
        Items.AddRange(CascadingMenu(menus, null));
    }


    private List<TreeViewItem<MenuEntity>> CascadingMenu(List<MenuEntity> menuEntities, TreeViewItem<MenuEntity> parent) => menuEntities
    .Where(x => x.ParentId == (parent?.Value.Id ?? 0))
    .Select(x =>
    {
        var treeViewItem = new TreeViewItem<MenuEntity>(x) { Text = x.MenuName, Icon = x.Icon, IsExpand = true, Parent = parent };
        treeViewItem.Items = CascadingMenu(menuEntities, treeViewItem);
        return treeViewItem;
    })
    .ToList();


}
